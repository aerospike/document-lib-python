# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install linter
        pip install -r requirements.txt
        # Build code and install package locally
        pip install --editable .
    - name: Lint with flake8
      run: |
        # The GitHub editor is 127 chars wide
        cd documentapi/
        flake8 . --count --max-complexity=10 --show-source --max-line-length=127
        cd ..
    - name: Run unit tests
      run: |
        # Create Aerospike server
        docker pull aerospike/aerospike-server
        docker run --name aerospike -d -p 3000:3000 aerospike/aerospike-server
        # Wait for server to fully start up
        sleep 3
        cd tests/
        python3 test.py
        # Cleanup
        docker container stop aerospike
        docker container rm aerospike
    - name: Deploy to test.pypi.org
      run: |
        python3 -m build
        # Upload to test.pypi.org
        python3 -m twine upload --repository testpypi dist/*
        # Test that downloading it works
        python3 -m pip install --index-url https://test.pypi.org/simple/ --no-deps document-lib-python
